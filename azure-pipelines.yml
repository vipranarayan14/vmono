# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.14'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

variables:
  python.version: 3.7.6

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install pipenv
  displayName: 'Install Python Dependencies'

- bash: |
    pipenv install

    if [ $AGENT_OS = 'Windows_NT' ]
    then
      pipenv install pypiwin32
    fi

    pipenv graph

  displayName: 'Install Package Dependencies'

- script: |
    sudo apt-get install ruby ruby-dev rubygems build-essential

    sudo gem install --no-document fpm
    
    fpm --version

  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'Install FBS Dependencies'

- script: |
    pipenv run fbs freeze
  displayName: 'Build App'

- script: |
    pipenv run fbs installer

  displayName: 'Make Installer'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'target/'
    Contents: '?(*.deb|*.dmg|*Setup.exe)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy Files'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(System.JobName)'

